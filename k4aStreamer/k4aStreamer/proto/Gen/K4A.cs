// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: marshal/k4a.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from marshal/k4a.proto</summary>
public static partial class K4AReflection {

  #region Descriptor
  /// <summary>File descriptor for marshal/k4a.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static K4AReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFtYXJzaGFsL2s0YS5wcm90byJ0Cg9DYXB0dXJlUmVzcG9uc2USEwoLY29s",
          "b3JfaW1hZ2UYASABKAwSEwoLZGVwdGhfaW1hZ2UYAiABKAwSEAoIaXJfaW1h",
          "Z2UYAyABKAwSJQodY2FwdHVyZWRFcG9jaFRpbWVNaWxsaVNlY29uZHMYBCAB",
          "KAEiSwoMQm9keVJlc3BvbnNlEhQKBWJvZHlzGAEgAygLMgUuQm9keRIlCh1j",
          "YXB0dXJlZEVwb2NoVGltZU1pbGxpU2Vjb25kcxgCIAEoASIkCgRCb2R5EgoK",
          "AmlkGAEgASgFEhAKCHNrZWxldG9uGAIgASgMIh4KC1lvbG9SZXF1ZXN0Eg8K",
          "B2NvY29JZHMYASADKAUiVwoMWW9sb1Jlc3BvbnNlEiAKC3ByZWRpY3Rpb25z",
          "GAEgAygLMgsuQ29jb09iamVjdBIlCh1jYXB0dXJlZEVwb2NoVGltZU1pbGxp",
          "U2Vjb25kcxgCIAEoASJcCgpDb2NvT2JqZWN0EgoKAmlkGAEgASgFEg0KBXNj",
          "b3JlGAIgASgCEgkKAXgYAyABKAISCQoBeRgEIAEoAhINCgV3aWR0aBgFIAEo",
          "AhIOCgZoZWlnaHQYBiABKAIiJgoRSW11U2FtcGxlUmVzcG9uc2USEQoJaW11",
          "U2FtcGxlGAEgASgMIkgKFERldmljZUNvbmZpZ1Jlc3BvbnNlEhsKE2Rldmlj",
          "ZUNvbmZpZ3VyYXRpb24YASABKAwSEwoLY2FsaWJyYXRpb24YAiABKAwiDgoM",
          "RW1wdHlSZXF1ZXN0YgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CaptureResponse), global::CaptureResponse.Parser, new[]{ "ColorImage", "DepthImage", "IrImage", "CapturedEpochTimeMilliSeconds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BodyResponse), global::BodyResponse.Parser, new[]{ "Bodys", "CapturedEpochTimeMilliSeconds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Body), global::Body.Parser, new[]{ "Id", "Skeleton" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::YoloRequest), global::YoloRequest.Parser, new[]{ "CocoIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::YoloResponse), global::YoloResponse.Parser, new[]{ "Predictions", "CapturedEpochTimeMilliSeconds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CocoObject), global::CocoObject.Parser, new[]{ "Id", "Score", "X", "Y", "Width", "Height" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ImuSampleResponse), global::ImuSampleResponse.Parser, new[]{ "ImuSample" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeviceConfigResponse), global::DeviceConfigResponse.Parser, new[]{ "DeviceConfiguration", "Calibration" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EmptyRequest), global::EmptyRequest.Parser, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CaptureResponse : pb::IMessage<CaptureResponse> {
  private static readonly pb::MessageParser<CaptureResponse> _parser = new pb::MessageParser<CaptureResponse>(() => new CaptureResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CaptureResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::K4AReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CaptureResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CaptureResponse(CaptureResponse other) : this() {
    colorImage_ = other.colorImage_;
    depthImage_ = other.depthImage_;
    irImage_ = other.irImage_;
    capturedEpochTimeMilliSeconds_ = other.capturedEpochTimeMilliSeconds_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CaptureResponse Clone() {
    return new CaptureResponse(this);
  }

  /// <summary>Field number for the "color_image" field.</summary>
  public const int ColorImageFieldNumber = 1;
  private pb::ByteString colorImage_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString ColorImage {
    get { return colorImage_; }
    set {
      colorImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "depth_image" field.</summary>
  public const int DepthImageFieldNumber = 2;
  private pb::ByteString depthImage_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString DepthImage {
    get { return depthImage_; }
    set {
      depthImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ir_image" field.</summary>
  public const int IrImageFieldNumber = 3;
  private pb::ByteString irImage_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString IrImage {
    get { return irImage_; }
    set {
      irImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "capturedEpochTimeMilliSeconds" field.</summary>
  public const int CapturedEpochTimeMilliSecondsFieldNumber = 4;
  private double capturedEpochTimeMilliSeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double CapturedEpochTimeMilliSeconds {
    get { return capturedEpochTimeMilliSeconds_; }
    set {
      capturedEpochTimeMilliSeconds_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CaptureResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CaptureResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ColorImage != other.ColorImage) return false;
    if (DepthImage != other.DepthImage) return false;
    if (IrImage != other.IrImage) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CapturedEpochTimeMilliSeconds, other.CapturedEpochTimeMilliSeconds)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ColorImage.Length != 0) hash ^= ColorImage.GetHashCode();
    if (DepthImage.Length != 0) hash ^= DepthImage.GetHashCode();
    if (IrImage.Length != 0) hash ^= IrImage.GetHashCode();
    if (CapturedEpochTimeMilliSeconds != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CapturedEpochTimeMilliSeconds);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ColorImage.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(ColorImage);
    }
    if (DepthImage.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(DepthImage);
    }
    if (IrImage.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(IrImage);
    }
    if (CapturedEpochTimeMilliSeconds != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(CapturedEpochTimeMilliSeconds);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ColorImage.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ColorImage);
    }
    if (DepthImage.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(DepthImage);
    }
    if (IrImage.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(IrImage);
    }
    if (CapturedEpochTimeMilliSeconds != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CaptureResponse other) {
    if (other == null) {
      return;
    }
    if (other.ColorImage.Length != 0) {
      ColorImage = other.ColorImage;
    }
    if (other.DepthImage.Length != 0) {
      DepthImage = other.DepthImage;
    }
    if (other.IrImage.Length != 0) {
      IrImage = other.IrImage;
    }
    if (other.CapturedEpochTimeMilliSeconds != 0D) {
      CapturedEpochTimeMilliSeconds = other.CapturedEpochTimeMilliSeconds;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ColorImage = input.ReadBytes();
          break;
        }
        case 18: {
          DepthImage = input.ReadBytes();
          break;
        }
        case 26: {
          IrImage = input.ReadBytes();
          break;
        }
        case 33: {
          CapturedEpochTimeMilliSeconds = input.ReadDouble();
          break;
        }
      }
    }
  }

}

public sealed partial class BodyResponse : pb::IMessage<BodyResponse> {
  private static readonly pb::MessageParser<BodyResponse> _parser = new pb::MessageParser<BodyResponse>(() => new BodyResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BodyResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::K4AReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BodyResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BodyResponse(BodyResponse other) : this() {
    bodys_ = other.bodys_.Clone();
    capturedEpochTimeMilliSeconds_ = other.capturedEpochTimeMilliSeconds_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BodyResponse Clone() {
    return new BodyResponse(this);
  }

  /// <summary>Field number for the "bodys" field.</summary>
  public const int BodysFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Body> _repeated_bodys_codec
      = pb::FieldCodec.ForMessage(10, global::Body.Parser);
  private readonly pbc::RepeatedField<global::Body> bodys_ = new pbc::RepeatedField<global::Body>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Body> Bodys {
    get { return bodys_; }
  }

  /// <summary>Field number for the "capturedEpochTimeMilliSeconds" field.</summary>
  public const int CapturedEpochTimeMilliSecondsFieldNumber = 2;
  private double capturedEpochTimeMilliSeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double CapturedEpochTimeMilliSeconds {
    get { return capturedEpochTimeMilliSeconds_; }
    set {
      capturedEpochTimeMilliSeconds_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BodyResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BodyResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!bodys_.Equals(other.bodys_)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CapturedEpochTimeMilliSeconds, other.CapturedEpochTimeMilliSeconds)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= bodys_.GetHashCode();
    if (CapturedEpochTimeMilliSeconds != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CapturedEpochTimeMilliSeconds);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    bodys_.WriteTo(output, _repeated_bodys_codec);
    if (CapturedEpochTimeMilliSeconds != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(CapturedEpochTimeMilliSeconds);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += bodys_.CalculateSize(_repeated_bodys_codec);
    if (CapturedEpochTimeMilliSeconds != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BodyResponse other) {
    if (other == null) {
      return;
    }
    bodys_.Add(other.bodys_);
    if (other.CapturedEpochTimeMilliSeconds != 0D) {
      CapturedEpochTimeMilliSeconds = other.CapturedEpochTimeMilliSeconds;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          bodys_.AddEntriesFrom(input, _repeated_bodys_codec);
          break;
        }
        case 17: {
          CapturedEpochTimeMilliSeconds = input.ReadDouble();
          break;
        }
      }
    }
  }

}

public sealed partial class Body : pb::IMessage<Body> {
  private static readonly pb::MessageParser<Body> _parser = new pb::MessageParser<Body>(() => new Body());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Body> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::K4AReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Body() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Body(Body other) : this() {
    id_ = other.id_;
    skeleton_ = other.skeleton_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Body Clone() {
    return new Body(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "skeleton" field.</summary>
  public const int SkeletonFieldNumber = 2;
  private pb::ByteString skeleton_ = pb::ByteString.Empty;
  /// <summary>
  /// marshalled skeleton struct
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Skeleton {
    get { return skeleton_; }
    set {
      skeleton_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Body);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Body other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Skeleton != other.Skeleton) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Skeleton.Length != 0) hash ^= Skeleton.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Skeleton.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Skeleton);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Skeleton.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Skeleton);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Body other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Skeleton.Length != 0) {
      Skeleton = other.Skeleton;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Skeleton = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class YoloRequest : pb::IMessage<YoloRequest> {
  private static readonly pb::MessageParser<YoloRequest> _parser = new pb::MessageParser<YoloRequest>(() => new YoloRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<YoloRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::K4AReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public YoloRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public YoloRequest(YoloRequest other) : this() {
    cocoIds_ = other.cocoIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public YoloRequest Clone() {
    return new YoloRequest(this);
  }

  /// <summary>Field number for the "cocoIds" field.</summary>
  public const int CocoIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_cocoIds_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> cocoIds_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> CocoIds {
    get { return cocoIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as YoloRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(YoloRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!cocoIds_.Equals(other.cocoIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= cocoIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    cocoIds_.WriteTo(output, _repeated_cocoIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += cocoIds_.CalculateSize(_repeated_cocoIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(YoloRequest other) {
    if (other == null) {
      return;
    }
    cocoIds_.Add(other.cocoIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          cocoIds_.AddEntriesFrom(input, _repeated_cocoIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class YoloResponse : pb::IMessage<YoloResponse> {
  private static readonly pb::MessageParser<YoloResponse> _parser = new pb::MessageParser<YoloResponse>(() => new YoloResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<YoloResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::K4AReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public YoloResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public YoloResponse(YoloResponse other) : this() {
    predictions_ = other.predictions_.Clone();
    capturedEpochTimeMilliSeconds_ = other.capturedEpochTimeMilliSeconds_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public YoloResponse Clone() {
    return new YoloResponse(this);
  }

  /// <summary>Field number for the "predictions" field.</summary>
  public const int PredictionsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CocoObject> _repeated_predictions_codec
      = pb::FieldCodec.ForMessage(10, global::CocoObject.Parser);
  private readonly pbc::RepeatedField<global::CocoObject> predictions_ = new pbc::RepeatedField<global::CocoObject>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::CocoObject> Predictions {
    get { return predictions_; }
  }

  /// <summary>Field number for the "capturedEpochTimeMilliSeconds" field.</summary>
  public const int CapturedEpochTimeMilliSecondsFieldNumber = 2;
  private double capturedEpochTimeMilliSeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double CapturedEpochTimeMilliSeconds {
    get { return capturedEpochTimeMilliSeconds_; }
    set {
      capturedEpochTimeMilliSeconds_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as YoloResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(YoloResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!predictions_.Equals(other.predictions_)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CapturedEpochTimeMilliSeconds, other.CapturedEpochTimeMilliSeconds)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= predictions_.GetHashCode();
    if (CapturedEpochTimeMilliSeconds != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CapturedEpochTimeMilliSeconds);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    predictions_.WriteTo(output, _repeated_predictions_codec);
    if (CapturedEpochTimeMilliSeconds != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(CapturedEpochTimeMilliSeconds);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += predictions_.CalculateSize(_repeated_predictions_codec);
    if (CapturedEpochTimeMilliSeconds != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(YoloResponse other) {
    if (other == null) {
      return;
    }
    predictions_.Add(other.predictions_);
    if (other.CapturedEpochTimeMilliSeconds != 0D) {
      CapturedEpochTimeMilliSeconds = other.CapturedEpochTimeMilliSeconds;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          predictions_.AddEntriesFrom(input, _repeated_predictions_codec);
          break;
        }
        case 17: {
          CapturedEpochTimeMilliSeconds = input.ReadDouble();
          break;
        }
      }
    }
  }

}

public sealed partial class CocoObject : pb::IMessage<CocoObject> {
  private static readonly pb::MessageParser<CocoObject> _parser = new pb::MessageParser<CocoObject>(() => new CocoObject());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CocoObject> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::K4AReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CocoObject() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CocoObject(CocoObject other) : this() {
    id_ = other.id_;
    score_ = other.score_;
    x_ = other.x_;
    y_ = other.y_;
    width_ = other.width_;
    height_ = other.height_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CocoObject Clone() {
    return new CocoObject(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 2;
  private float score_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 3;
  private float x_;
  /// <summary>
  /// bounding box for the target
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 4;
  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "width" field.</summary>
  public const int WidthFieldNumber = 5;
  private float width_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Width {
    get { return width_; }
    set {
      width_ = value;
    }
  }

  /// <summary>Field number for the "height" field.</summary>
  public const int HeightFieldNumber = 6;
  private float height_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Height {
    get { return height_; }
    set {
      height_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CocoObject);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CocoObject other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Score, other.Score)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Width, other.Width)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Score != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Score);
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (Width != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Width);
    if (Height != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Score != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Score);
    }
    if (X != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Y);
    }
    if (Width != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Width);
    }
    if (Height != 0F) {
      output.WriteRawTag(53);
      output.WriteFloat(Height);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Score != 0F) {
      size += 1 + 4;
    }
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (Width != 0F) {
      size += 1 + 4;
    }
    if (Height != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CocoObject other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Score != 0F) {
      Score = other.Score;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    if (other.Width != 0F) {
      Width = other.Width;
    }
    if (other.Height != 0F) {
      Height = other.Height;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 21: {
          Score = input.ReadFloat();
          break;
        }
        case 29: {
          X = input.ReadFloat();
          break;
        }
        case 37: {
          Y = input.ReadFloat();
          break;
        }
        case 45: {
          Width = input.ReadFloat();
          break;
        }
        case 53: {
          Height = input.ReadFloat();
          break;
        }
      }
    }
  }

}

public sealed partial class ImuSampleResponse : pb::IMessage<ImuSampleResponse> {
  private static readonly pb::MessageParser<ImuSampleResponse> _parser = new pb::MessageParser<ImuSampleResponse>(() => new ImuSampleResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ImuSampleResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::K4AReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImuSampleResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImuSampleResponse(ImuSampleResponse other) : this() {
    imuSample_ = other.imuSample_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImuSampleResponse Clone() {
    return new ImuSampleResponse(this);
  }

  /// <summary>Field number for the "imuSample" field.</summary>
  public const int ImuSampleFieldNumber = 1;
  private pb::ByteString imuSample_ = pb::ByteString.Empty;
  /// <summary>
  /// marshalled ImuSample struct
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString ImuSample {
    get { return imuSample_; }
    set {
      imuSample_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ImuSampleResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ImuSampleResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ImuSample != other.ImuSample) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ImuSample.Length != 0) hash ^= ImuSample.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ImuSample.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(ImuSample);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ImuSample.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ImuSample);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ImuSampleResponse other) {
    if (other == null) {
      return;
    }
    if (other.ImuSample.Length != 0) {
      ImuSample = other.ImuSample;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ImuSample = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class DeviceConfigResponse : pb::IMessage<DeviceConfigResponse> {
  private static readonly pb::MessageParser<DeviceConfigResponse> _parser = new pb::MessageParser<DeviceConfigResponse>(() => new DeviceConfigResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeviceConfigResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::K4AReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeviceConfigResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeviceConfigResponse(DeviceConfigResponse other) : this() {
    deviceConfiguration_ = other.deviceConfiguration_;
    calibration_ = other.calibration_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeviceConfigResponse Clone() {
    return new DeviceConfigResponse(this);
  }

  /// <summary>Field number for the "deviceConfiguration" field.</summary>
  public const int DeviceConfigurationFieldNumber = 1;
  private pb::ByteString deviceConfiguration_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString DeviceConfiguration {
    get { return deviceConfiguration_; }
    set {
      deviceConfiguration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "calibration" field.</summary>
  public const int CalibrationFieldNumber = 2;
  private pb::ByteString calibration_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Calibration {
    get { return calibration_; }
    set {
      calibration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeviceConfigResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeviceConfigResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceConfiguration != other.DeviceConfiguration) return false;
    if (Calibration != other.Calibration) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceConfiguration.Length != 0) hash ^= DeviceConfiguration.GetHashCode();
    if (Calibration.Length != 0) hash ^= Calibration.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceConfiguration.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(DeviceConfiguration);
    }
    if (Calibration.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Calibration);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceConfiguration.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceConfiguration);
    }
    if (Calibration.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Calibration);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeviceConfigResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceConfiguration.Length != 0) {
      DeviceConfiguration = other.DeviceConfiguration;
    }
    if (other.Calibration.Length != 0) {
      Calibration = other.Calibration;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceConfiguration = input.ReadBytes();
          break;
        }
        case 18: {
          Calibration = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class EmptyRequest : pb::IMessage<EmptyRequest> {
  private static readonly pb::MessageParser<EmptyRequest> _parser = new pb::MessageParser<EmptyRequest>(() => new EmptyRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EmptyRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::K4AReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmptyRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmptyRequest(EmptyRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmptyRequest Clone() {
    return new EmptyRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EmptyRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EmptyRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EmptyRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

#endregion


#endregion Designer generated code
